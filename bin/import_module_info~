#!/usr/bin/php
<?php

require_once(__DIR__.'/../lib/includes.php');
includes(array("debug"=>1));
#R::freeze( true );
if (count($argv) < 2)
{
	echo "you must specifiy a file to import\n";
	exit;
}
$file = fopen( $argv[1], "r" ) or die "file does not exist";
$info = array();

fgetcsv($file); # chuck the headings away

while( $line = fgetcsv($file) )
{
	####### TODO, reading the data file should be abstracted, this is blatently something which will change
	$info[$line[0]][$line[9]]["title"] = $line[15];
	$info[$line[0]][$line[9]]["facultycode"] = $line[3];
	$info[$line[0]][$line[9]]["facultyname"] = $line[4];
	if($staff_id = trim($line[28]))
	{
		$info[$line[0]][$line[9]]["people"][$staff_id] = 1;
		$people[$staff_id]["first_name"] = trim($line[30]);
		$people[$staff_id]["last_name"] = trim($line[29]);
	}

	if($program_code = trim($line[35]))
	{
		$programs[$program_code]["title"] = $line[36];
		$programs[$program_code]["majors"][$line[37]] = 1;
	}
	if($module_code = trim($line[37]))
	{
		$majors[$module_code]["title"] = $line[38];
		$majors[$module_code]["modules"][$line[39]][$line[9]] = 1;
	}
#	fputcsv(STDOUT, $module);
}

print "People import\n";
foreach( $people as $staff_id => $people_properties )
{
	$person = R::findOne("person", "staffid = ?", array( $staff_id ) );
	if(!isset($person))
	{
		$person = R::dispense("person");
		$person->staffid = $staff_id;
	}
#always update staff name for cases of name change in data. This could be optimized if necessary.
	$person->firstname = $people[$staff_id]["first_name"];
	$person->lastname = $people[$staff_id]["last_name"];
	
	R::store($person);
}

print "Modules import\n";
foreach( $info as $year => $modules)
{
	foreach($modules as $module_code => $properties )
	{
		$module = R::findOne("module", "session = ? AND code = ?", array( $year, $module_code ) );
		
		if(!isset($module)){
			$module = R::dispense('module');
			$module->code = $module_code;
			$module->session = $year;
		}

		$module->title = $properties["title"];
		$module->facultycode = $properties["facultycode"];
		$module->facultyname = $properties["facultyname"];
		if( !empty($properties["people"]) )
		{	
			$people = array_keys($properties["people"]);
			$module->sharedPerson = R::find('person', ' staffid IN ('.R::genSlots($people).') ', $people);
		}
		R::store($module);
	}
	
}

print "Majors import\n";
foreach( $majors as $major_code => $major_properties )
{
	$major = R::findOne("major", "code = ?", array($major_code ) );

	if(!isset($major))
	{
		$major = R::dispense('major');
		$major->code = $major_code;
	}

	$major->title = $major_properties["title"];

	if( !empty($major_properties["modules"]) )
	{
		$modules = array_keys($major_properties["modules"]);
		$major->sharedModule = R::find('module', ' code IN ('.R::genSlots($modules).') ', $modules);
	}
	
	R::store($major);
}

print "Programs import\n";
foreach($programs as $program_code => $program_properties){

	$program = R::findOne("program", "code = ?", array($program_code ) );
	
	if(!isset($program))
	{
		$program = R::dispense('program');	
		$program->code = $program_code;
	}

	$program->title = $program_properties["title"];

	if( !empty($program_properties["majors"]) )
	{
		$majors = array_keys($program_properties["majors"]);
		$program->sharedMajor = R::find('major', ' code IN ('.R::genSlots($majors).') ', $majors);
	}

	R::store($program);
}

?>
